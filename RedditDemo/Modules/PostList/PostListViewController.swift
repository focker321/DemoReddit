//
//  PostListViewController.swift
//  RedditDemo
//
//  Created by Santiago Apaza on 6/7/20.
//  Copyright (c) 2020 Ayllu. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class PostListViewController: UIViewController {
    private enum _Constants {
        static let reusableCellId = "redditPostCell"
    }
    
    // MARK: - Private properties -
    
    let tableView = UITableView()
    var safeArea: UILayoutGuide?
    var refreshControl = UIRefreshControl()
    
    // MARK: - Public properties -

    var presenter: PostListPresenterInterface!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        
        _setupScreen()
        _setupData()
    }
    
    // MARK: - Private functions -
    
    private func _setupNavigationBar() {
        let nav = self.navigationController?.navigationBar
        nav?.barStyle = UIBarStyle.black
        nav?.tintColor = .white
        nav?.titleTextAttributes = [NSAttributedString.Key.foregroundColor: UIColor.redOrange]
        
        title = "POST LIST"
    }
    
    private func _setupScreen() {
        safeArea = view.layoutMarginsGuide
        
        _setupNavigationBar()
        _setupTableView()
    }
    
    private func _setupTableView() {
        // TODO: Move delegate and data source to another file for having the possibility of changing content just changing datasource
        tableView.delegate = self
        tableView.dataSource = self
        
        tableView.backgroundColor = .darkGray
        tableView.separatorColor = .white
        
        guard let `safeArea` = safeArea else {
            // TODO: Log something for recognize in which weird case it fails
            return
        }
        
        view.addSubview(tableView)
        tableView.translatesAutoresizingMaskIntoConstraints = false
        
        NSLayoutConstraint.activate([
            tableView.topAnchor.constraint(equalTo: safeArea.topAnchor),
            tableView.leftAnchor.constraint(equalTo: view.leftAnchor),
            tableView.bottomAnchor.constraint(equalTo: safeArea.bottomAnchor),
            tableView.rightAnchor.constraint(equalTo: view.rightAnchor)
        ])
        
        tableView.register(RedditPostCell.self, forCellReuseIdentifier: _Constants.reusableCellId)
        
        refreshControl.attributedTitle = NSAttributedString(string: GlobalConstants.pullRefreshLabelText, attributes: [NSAttributedString.Key.foregroundColor: UIColor.white])
        refreshControl.tintColor = .white
        refreshControl.addTarget(self, action: #selector(_setupData), for: .valueChanged)
        tableView.addSubview(refreshControl)

    }
    
    @objc private func _setupData() {
        // TODO: Add a loader, that must be finished on `refreshPostList` function
        presenter.getPosts()
    }
}

// MARK: - Extensions -

extension PostListViewController: PostListViewInterface {
    func refreshPostList() {
        // TODO: Take in count `pull refresh`
        DispatchQueue.main.async { [weak self] in
            self?.tableView.reloadData()
            self?.refreshControl.endRefreshing()
        }
    }
}

extension PostListViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        presenter.navigateToDetail(indexPath)
    }
}

extension PostListViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        presenter.numberOfPosts
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let post = presenter.postByIndex(indexPath) else {
            // TODO Add and strategic for removing this unknown cell
            return UITableViewCell()
        }
        
        guard let cell = tableView.dequeueReusableCell(withIdentifier: _Constants.reusableCellId, for: indexPath) as? RedditPostCell else { return UITableViewCell() }
        cell.setupDataSource(post: post)
        
        return cell
    }
}
